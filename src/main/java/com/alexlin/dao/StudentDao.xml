<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alexlin.dao.StudentDao">
    <!-- 获得所有学生-->
    <select id="findAll" resultType="Student">
        SELECT *
        FROM student
    </select>

    <!-- 学生登录-->
    <select id="studentLogin" resultType="Student" parameterType="String">
        SELECT *
        FROM student
        WHERE s_num = #{number}
          AND s_password = #{password}
    </select>
    <!-- 学生注册-->
    <insert id="addStudent" parameterType="Student">
        INSERT INTO student(s_name, s_password, s_num)
        VALUES (#{name}, #{password}, #{studentNumber})
    </insert>
    <!-- 以学号查找学生，判断该学生是否注册过-->
    <select id="findStudentByNumber" resultType="Student" parameterType="String">
        SELECT *
        FROM student
        WHERE s_num = #{studentNumber}
    </select>
    <!-- 删除学生-->
    <delete id="deleteStudent" parameterType="Integer">
        delete
        from student
        where s_num = #{number};
    </delete>
    <!-- 更新学生-->
    <update id="updateStudent" parameterType="Student">
        update student
        <set>
            <if test="s_name != null and s_name != ''">s_name = #{s_name},</if>
            <if test="s_password != null and s_password != ''">s_password=#{s_password},</if>
            <if test="s_num != null and s_num != ''">s_num=#{s_num},</if>
            <if test="t_id != null and t_id != ''">t_id=#{t_id}</if>
            <if test="v1 != null and v1 != ''">v1=#{v1}</if>
            <if test="v2 != null and v2 != ''">v2=#{v2}</if>
            <if test="v3 != null and v3 != ''">v3=#{v3}</if>
        </set>
        where s_num = #{s_num}
    </update>
    <select id="findStudentById" parameterType="Integer" resultType="Student">
        select *
        from student
        where s_id = #{id}
    </select>

    <!-- 学生选老师-->
    <update id="setTeacher" parameterType="Student">
        update student
        <set>
            <if test="v1 != null and v1 !=''">v1 = #{v1},</if>
            <if test="v2 != null and v2 !=''">v2 = #{v2},</if>
            <if test="v3 != null and v3 !=''">v3 = #{v3},</if>
            state = "ready"
        </set>
        where s_id = #{s_id}
    </update>

    <!-- 第一志愿-->
    <select id="matchV1" parameterType="int" resultType="Student">
        select *
        from student
        where v1 = 1 and state = "Ready";
    </select>

    <!-- 第二志愿-->
    <select id="matchV2" parameterType="int" resultType="Student">
        select *
        from student
        where v2 = #{teacherId} and state = "V1Out";
    </select>

    <!-- 第三志愿-->
    <select id="matchV3" parameterType="int" resultType="Student">
        select *
        from student
        where v3 = #{teacherId} and state = "V2Out";
    </select>

    <!-- 被老师选上了-->
    <update id="chosen" parameterType="Student">
        update student
        <set>
            <if test="t_id != null and t_id !=''">t_id = #{t_id},</if>
            state = "Finish"
        </set>
        where s_id = #{s_id}
    </update>

    <!-- 一志愿落选-->
    <update id="setV1Out" parameterType="Student">
        update student
        <set>
            state = "V1Out"
        </set>
        where s_id = #{s_id}
    </update>

    <!-- 二志愿落选-->
    <update id="setV2Out" parameterType="Student">
        update student
        <set>
            state = "V2Out"
        </set>
        where s_id = #{s_id}
    </update>

    <!-- 三志愿落选-->
    <update id="setV3Out" parameterType="Student">
        update student
        <set>
            state = "V3Out"
        </set>
        where s_id = #{s_id}
    </update>

    <!--设置学生状态-->
    <update id="setState" parameterType="Student">
        update student
        set state=#{state}
        WHERE s_id = #{s_id};
    </update>

    <!--设置所有学生状态-->
    <update id="setAll" parameterType="String">
        update student set state =#{state};
    </update>
    <!--设置志愿落选-->
    <update id="setVOut" parameterType="String">
        update student set state = #{VOut}
        where state &lt;&gt; "Finish";
    </update>
    <!--使用map，与chosen不冲突-->
    <update id="setTid" parameterType="Map">
        update student set t_id = #{t_id},state="Finish"
        where s_id = #{s_id};
    </update>
    <select id="getAllNotFinish" resultType="Student">
        select * from student
        where state &lt;&gt; "Finish";
    </select>
</mapper>